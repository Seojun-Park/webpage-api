# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AttachmentType {
  fileName: String!
  url: String!
  title: String!
}

type ContactType {
  title: String!
  url: String!
}

type LanguageType {
  title: String!
  level: String!
}

type EducationType {
  title: String!
  startedAt: DateTime!
  endAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  _id: String!
  title: String!
  email: String!
  intro: String!
  thumbnail: String!
  contacts: [ContactType!]
  languages: [LanguageType!]
  educations: [EducationType!]
  attachments: [AttachmentType!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type StackType {
  title: String!
  logo: String
}

type Experience {
  _id: String!
  title: String!
  description: String!
  link: String
  stacks: [StackType!]
  startedAt: DateTime!
  endAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Work {
  _id: String!
  title: String!
  description: String!
  repositoryLink: String
  images: [AttachmentType!]
  attachments: [AttachmentType!]
  stacks: [StackType!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ExperiencesReturnType {
  data: [Experience!]!
  total: Int!
}

type WorksReturnType {
  data: [Work!]!
  total: Int!
}

type UsersReturnType {
  data: [User!]!
  total: Int!
}

type Query {
  users(args: PaginationArgs): UsersReturnType!
  user(_id: String!): User!
  works(args: PaginationArgs): WorksReturnType!
  work(_id: String!): Work!
  experiences(args: PaginationArgs): ExperiencesReturnType!
  experience(_id: String!): Experience!
}

input PaginationArgs {
  skip: Int! = 0
  take: Int! = 25
  sort: SortType
}

input SortType {
  field: String!
  order: String!
}

type Mutation {
  createUser(args: CreateUserInput!): User!
  updateUser(args: UpdateUserInput!): User!
  removeUser(_id: String!): User!
  createWork(args: CreateWorkInput!): Work!
  updateWork(args: UpdateWorkInput!): Work!
  removeWork(_id: String!): Work!
  createExperience(args: CreateExperienceInput!): Experience!
  updateExperience(args: UpdateExperienceInput!): Experience!
  removeExperience(_id: String!): Experience!
}

input CreateUserInput {
  title: String!
  email: String!
  intro: String!
  thumbnail: String!
  contacts: [ContactInput!]
  languages: [LanguageInput!]
  educations: [EducationInput!]
  attachments: [AttachementInput!]
}

input ContactInput {
  title: String!
  url: String!
}

input LanguageInput {
  title: String!
  level: String!
}

input EducationInput {
  title: String!
  startedAt: DateTime!
  endAt: DateTime!
}

input AttachementInput {
  fileName: String!
  url: String!
  title: String!
}

input UpdateUserInput {
  title: String
  email: String
  intro: String
  thumbnail: String
  contacts: [ContactInput!]
  languages: [LanguageInput!]
  educations: [EducationInput!]
  attachments: [AttachementInput!]
  _id: String!
}

input CreateWorkInput {
  title: String!
  description: String!
  repositoryLink: String
  images: [AttachementInput!]
  attachments: [AttachementInput!]
  stacks: [StackInput!]
}

input StackInput {
  title: String!
  logo: String
}

input UpdateWorkInput {
  title: String
  description: String
  repositoryLink: String
  images: [AttachementInput!]
  attachments: [AttachementInput!]
  stacks: [StackInput!]
  _id: String!
}

input CreateExperienceInput {
  title: String!
  description: String!
  link: String
  stacks: [StackInput!]
  startedAt: DateTime!
  endAt: DateTime
}

input UpdateExperienceInput {
  title: String
  description: String
  link: String
  stacks: [StackInput!]
  startedAt: DateTime
  endAt: DateTime
  _id: String!
}